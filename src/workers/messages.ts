import { NotificationIntentType } from "@prisma/client";
import { NotificationIntentWithRelations } from "../types/notificationTypes";
import { ApplicationAcceptedEvent, PlayerAddedToMatchEvent, PlayerAppliedToMatchEvent } from "../types/notifications";
import { getPlayerById } from "../utils/player";
import { GENDER } from "../types/playerTypes";

const dateFormatter = new Intl.DateTimeFormat("es-AR", {
  dateStyle: "short",
  timeStyle: "short",
  timeZone: "UTC"
});

export const buildIntentCopy = async (intent: NotificationIntentWithRelations) => {
  const match = intent.match;
  const matchDate = match?.dateTime ? new Date(match.dateTime) : undefined;
  const formattedDate = matchDate ? dateFormatter.format(matchDate) : undefined;
  const location = match?.location ? match.location : undefined;

  switch (intent.type) {
    case NotificationIntentType.PLAYER_ADDED:
      const playerAddedData = intent.payload as PlayerAddedToMatchEvent;
      const player1 = await getPlayerById(playerAddedData.addedByPlayerId);
      return {
        title: "¬°Te agregaron a un partido!",
        body: `${player1?.firstName} cre√≥ un partido en ${location} para el d√≠a ${formattedDate} y te agreg√≥.`,
        data: {
          matchId: intent.matchId,
          reason: "player-added"
        }
      };
    case NotificationIntentType.PLAYER_APPLIED:
      const playerAppliedData = intent.payload as PlayerAppliedToMatchEvent;
      const player2 = await getPlayerById(playerAppliedData.playerAppliedId);
      return {
        title: "¬°Se postularon a tu partido!",
        body: `üí• ${player2?.firstName} quiere sumarse a tu partido en ${location} del d√≠a ${formattedDate} ¬°Revis√° su perfil!`,
        data: {
          matchId: intent.matchId,
          reason: "player-applied"
        }
      };
    case NotificationIntentType.MATCH_CANCELLED:
      return {
        title: "Partido cancelado",
        body: `El partido en ${location} del d√≠a ${formattedDate} no se va a jugar. Te avisamos si se reprograma`,
        data: {
          matchId: intent.matchId,
          reason: "match-cancelled"
        }
      };
    case NotificationIntentType.PLAYER_REMOVED:
      return {
        title: "Te eliminaron del partido",
        body: `El organizador cancel√≥ tu participaci√≥n en el partido en ${location} del d√≠a ${formattedDate}`,
        data: {
          matchId: intent.matchId,
          reason: "player-removed"
        }
      };
    case NotificationIntentType.APPLICATION_REJECTED:
      return {
        title: "Solicitud rechazada",
        body: `Rechazaron tu solicitud para el partido en ${location} del d√≠a ${formattedDate} Hay m√°s partidos esperando por vos.`,
        data: {
          matchId: intent.matchId,
          reason: "application-rejected"
        }
      };
    case NotificationIntentType.APPLICATION_ACCEPTED:
      const applicatinAcceptedData = intent.payload as ApplicationAcceptedEvent;
      const player3 = await getPlayerById(applicatinAcceptedData.playerId, { gender: true });
      const aceptadx = player3?.gender?.code === GENDER.CABALLERO ? "aceptado" : "aceptada";
      return {
        title: "¬°Est√°s adentro!",
        body: `üéâ Fuiste ${aceptadx} en el partido en ${location} del d√≠a ${formattedDate}`,
        data: {
          matchId: intent.matchId,
          reason: "application-accepted"
        }
      };
    case NotificationIntentType.MATCH_CONFIRMED:
      return {
        title: "¬°Partido confirmado!",
        body: `‚úÖ El partido en ${location} el del d√≠a ${formattedDate} est√° confirmado. ¬°A prepararse!`,
        data: {
          matchId: intent.matchId,
          reason: "match-confirmed"
        }
      };
    case NotificationIntentType.MATCH_REMINDER_1H:
      return {
        title: "¬°Calent√° que entr√°s!",
        body: `Falta una hora para tu partido en ${location}.`,
        data: {
          matchId: intent.matchId,
          reason: "match-reminder-1h"
        }
      };
    case NotificationIntentType.MATCH_LOAD_RESULT:
      return {
        title: "Actualiz√° el resultado",
        body: `üìù ¬øC√≥mo sali√≥ el partido en ${location}? Carg√° el resultado para mantener actualizado tu ranking`,
        data: {
          matchId: intent.matchId,
          reason: "match-reminder-1h"
        }
      };
    case NotificationIntentType.RESULT_CREATED:
      return {
        title: "Resultado cargado",
        body: `El otro equipo carg√≥ el restultado del partido en ${location}. Revisalo para ver si est√°s de acuerdo.`,
        data: {
          matchId: intent.matchId,
          reason: "result-created"
        }
      };
    case NotificationIntentType.RESULT_REJECTED:
      return {
        title: "Resultado rechazado",
        body: `‚ö†Ô∏è Tu rival corrigi√≥ el resultado del partido en ${location}. ¬°Corr√© a confirmarlo!`,
        data: {
          matchId: intent.matchId,
          reason: "result-rejected"
        }
      };
    case NotificationIntentType.RESULT_ACCEPTED:
      return {
        title: "Resultado aceptado",
        body: `‚úÖ El resultado del partido en ${location} fue confirmado. ¬°Ya pod√©s ver c√≥mo impacta en tu ranking!`,
        data: {
          matchId: intent.matchId,
          reason: "result-accepted"
        }
      };
    default:
      return {
        title: "PorTres",
        body: "Tienes novedades en PorTres.",
        data: {
          matchId: intent.matchId,
          reason: "generic"
        }
      };
  }
};
